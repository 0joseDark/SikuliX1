/*
 * Copyright (c) 2010-2018, sikuli.org, sikulix.com - MIT license
 */

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.sikuli.natives.finder;

public class VisionNative {

  //<editor-fold desc="SWIG - obsolete">
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected VisionNative(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(VisionNative obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        VisionProxyJNI.delete_Vision(swigCPtr);
      }
      swigCPtr = 0;
    }
  }
  //</editor-fold>

  //<editor-fold desc="find">
  public static FindResults find(FindInput q) {
    return new FindResults(VisionProxyJNI.Vision_find(FindInput.getCPtr(q), q), true);
  }

  public static FindResults findChanges(FindInput q) {
    return new FindResults(VisionProxyJNI.Vision_findChanges(FindInput.getCPtr(q), q), true);
  }
  //</editor-fold>

  //<editor-fold desc="OCR">
  public static void initOCR(String ocrDataPath) {
    VisionProxyJNI.Vision_initOCR(ocrDataPath);
  }

  public static OCRText recognize_as_ocrtext(MatNative image) {
    return new OCRText(VisionProxyJNI.Vision_recognize_as_ocrtext(MatNative.getCPtr(image), image), true);
  }

  public static String recognize(MatNative image) {
    return VisionProxyJNI.Vision_recognize(MatNative.getCPtr(image), image);
  }

  public static String recognizeWord(MatNative image) {
    return VisionProxyJNI.Vision_recognizeWord(MatNative.getCPtr(image), image);
  }
  //</editor-fold>

  //<editor-fold desc="parameter">
  public static void setParameter(String param, float val) {
    VisionProxyJNI.Vision_setParameter(param, val);
  }

  public static float getParameter(String param) {
    return VisionProxyJNI.Vision_getParameter(param);
  }

  public static void setSParameter(String param, String val) {
    VisionProxyJNI.Vision_setSParameter(param, val);
  }

  public static String getSParameter(String param) {
    return VisionProxyJNI.Vision_getSParameter(param);
  }

  public VisionNative() {
    this(VisionProxyJNI.new_Vision(), true);
  }
  //</editor-fold>

  //<editor-fold desc="native - not used">
  public static MatNative createMat(int _rows, int _cols, byte[] _data) {
    return new MatNative(VisionProxyJNI.Vision_createMat(_rows, _cols, _data), true);
  }

  public static double compare(MatNative m1, MatNative m2) {
    return VisionProxyJNI.Vision_compare(MatNative.getCPtr(m1), m1, MatNative.getCPtr(m2), m2);
  }
  //</editor-fold>
}
